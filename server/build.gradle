/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ferenc.gyurkovics' at '3/30/16 1:51 PM' with Gradle 2.9
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
mainClassName = 'com.company.Main'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.company.Main'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
	compile 'com.google.code.gson:gson:1.7.2'
	compile 'com.google.inject:guice-parent:3.0'
    compile files("${System.properties['java.home']}/../lib/tools.jar")
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'junit:junit:4.12'
	testCompile "org.mockito:mockito-core:1.+"
}
